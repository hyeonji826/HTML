1. <div>
HTML에서 웹 페이지의 구조를 나누거나 묶을 때 사용하는 대표적인 블록 요소(=틀 만들기)로 주로 CSS를 활용하여 레이아웃을 구성하거나 스타일을 적용하기 위한 용도로 사용된다. 

# padding : 상하좌우
# margin : 상하좌우
    => 5px(위아래-겹침현상 if, 위로 5 아래로 10이면 큰 값인 10으로 떨어짐) 0(좌우-안겹침)

2. <span>
HTML에서 텍스트나 인라인 요소를 감싸서 특정 부분에 스타일을 적용하거나 구분할 때 사용하는 인라인 요소이다.
의미는 없으나 CSS를 통해서 범위를 감싸주어 특정 부분만 스타일을 적용시키기 좋다. (문단이 아닌 문장태그라서!)
Ex. span.class명 -> span태그에 감싸져있는 class명인 클래스만 !

-div를 이용한 레이아웃
1. float 
- CSS에서 요소를 문서의 흐름에서 분리하여 왼쪽 또는 오른쪽으로 띄우는 속성이다. 
    만약 그림과 글이 같이 쓰였다면 그림 크기만큼 끌어올린다. = 수평정렬
- 하지만 float된 요소는 부모의 높이 계산에서 제외되기 때문에, 이를 해결하려면 clear 속성이나 clearfix 테크닉을 함께 사용해야 한다.
- 마지막으로 끌어올린 요소 뒤에 clear 속성을 붙이면 그 아래에 있는 요소들은 올라오지않는다. clear = float하는 요소범위를 한정

2. flex(flexable layout)
- flex는 CSS에서 유연하고 직관적인 레이아웃 구성을 가능하게 해주는 레이아웃이다.
- display : flex -> 부모 요소, 그 안의 자식 요소들을 가로&세로 방향으로 쉽게 정렬 후 배치 가능
- jusftify-content를 사용해 좌우&중앙 방향의 정렬을 설정하고, align-items로 위아래 방향의 정렬을 조절가능 (수평정렬)
- 자식요소에 flex : 1를 주면 공간을 균등히 나누거나 자동크기조절 가능
- 반응형 웹 구성에도 유용!

3. grid
- grid는 CSS에서 2차원(가로+세로) 레이아웃을 쉽게 구성할 수 있도록 도와주는 강력한 레이아웃 시스템
- display : grid를 사용하면 행과 열을 자유롭게 설정할 수 있으며, grid-templete - columns or rows를 통해 영역 구분
- 특히 fr 단위를 사용하면 남은 공간을 비율로 분배할 수 있어 유동적인 레이아웃 구현 가능